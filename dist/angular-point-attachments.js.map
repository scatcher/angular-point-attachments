{"version":3,"sources":["apAttachments.ts"],"names":["ap","ap.attachments","ap.attachments.APAttachmentsController","ap.attachments.APAttachmentsController.constructor","ap.attachments.APAttachmentsController.deleteAttachment","ap.attachments.APAttachmentsController.fileName","ap.attachments.APAttachmentsController.getFileBuffer","ap.attachments.APAttachmentsController.syncronizeRemoteChanges","ap.attachments.APAttachmentsController.uploadAttachment","ap.attachments.APAttachmentsController.validateFileName","ap.attachments.APAttachmentsDirective"],"mappings":"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","file":"angular-point-attachments.js","sourcesContent":["/// <reference path=\"../typings/tsd.d.ts\" />\nmodule ap.attachments {\n    'use strict';\n\n    var $sce, $q, $timeout, apDataService, toastr;\n\n    interface IListItemWithAttachments extends ap.ListItem<any>{\n        attachments: string[];\n    }\n\n    interface IControllerScope {\n        changeEvent?();\n        listItem: IListItemWithAttachments;\n    }\n\n    class APAttachmentsController {\n        listItem: IListItemWithAttachments;\n        uploading = false;\n        constructor(private $scope: IControllerScope) {\n            var vm = this;\n\n            /** Can't manipulate attachments for listItems that haven't been saved to the server */\n            if (!$scope.listItem || !$scope.listItem.id) {\n                return;\n            }\n            vm.listItem = $scope.listItem;\n            vm.listItem.attachments = vm.listItem.attachments || [];\n        }\n\n        deleteAttachment(attachment) {\n            var confirmation = window.confirm(\"Are you sure you want to delete this file?\");\n            if (confirmation) {\n                toastr.info(\"Negotiating with the server\");\n                this.listItem.deleteAttachment(attachment).then(() => {\n                    this.syncronizeRemoteChanges();\n                    toastr.success(\"Attachment successfully deleted\");\n                    if (_.isFunction(this.$scope.changeEvent)) {\n                        this.$scope.changeEvent();\n                    }\n                });\n            }\n        }\n\n        fileName(attachment) {\n            var index = attachment.lastIndexOf(\"/\") + 1;\n            return attachment.substr(index);\n        }\n\n        getFileBuffer(file) {\n            var deferred = $q.defer();\n\n            var reader = new FileReader();\n\n            reader.onload = function(e) {\n                deferred.resolve(e.target.result);\n            };\n\n            reader.onerror = function(e) {\n                deferred.reject(e.target.error);\n            };\n\n            reader.readAsArrayBuffer(file);\n\n            return deferred.promise;\n        }\n\n        /**\n         *  Events from the iframe don't automatically sync with the cache so we need to get\n         *  the updated list item which will extend the changes to our local referenced list\n         *  item.\n         */\n        syncronizeRemoteChanges() {\n            var model = this.listItem.getModel();\n            model.getListItemById(this.listItem.id)\n                .then((updatedItem) => {\n                    if (this.listItem.attachments !== updatedItem.attachments) {\n                        this.listItem.attachments = updatedItem.attachments;\n                    }\n                })\n        }\n\n        uploadAttachment() {\n            var file = document.getElementById('ap-file').files[0];\n\n            /** Ensure file name contains no illegal characters */\n            if (file && this.validateFileName(file.name)) {\n                this.getFileBuffer(file).then((buffer) => {\n                    var binary = \"\";\n                    var bytes = new Uint8Array(buffer);\n                    var i = bytes.byteLength;\n                    while (i--) {\n                        binary = String.fromCharCode(bytes[i]) + binary;\n                    }\n\n                    this.uploading = true;\n\n                    apDataService.serviceWrapper({\n                        operation: 'AddAttachment',\n                        listName: this.listItem.getModel().list.getListId(),\n                        listItemID: this.listItem.id,\n                        fileName: file.name,\n                        attachment: btoa(binary)\n                    }).then(() => {\n                        this.uploading = false;\n                        toastr.success('File successfully uploaded');\n                        this.syncronizeRemoteChanges();\n                    }, (err) => {\n                        this.uploading = false;\n                        toastr.error('There was a problem completing the upload.');\n                    });\n                });\n            }\n        }\n\n        /**\n         * @description Check to ensure file to be uploaded doesn't contain any illegal SharePoint characters.\n         * @param {string} fileName The name of the file to be uploaded.\n         * @returns {boolean} Is the file name valid?\n         */\n        validateFileName(fileName) {\n            var isValid = true;\n            var userMessage = '';\n            var illegalCharacters = ['~', '#', '%', '&', '*', '{', '}', '\\\\', '/', ':', '<', '>', '?', '|', '\"', '..'];\n            _.each(illegalCharacters, function(illegalCharacter) {\n                if (fileName.indexOf(illegalCharacter) > -1) {\n                    userMessage = 'The \"' + illegalCharacter + '\" character isn\\'t allowed to be used in a file name.';\n                    /** Break loop early */\n                    return isValid = false;\n                }\n            });\n\n            /** You cannot use the period character at the end of a file name. */\n            if (fileName[fileName.length - 1] === '.') {\n                userMessage = 'You cannot use the period character at the end of a file name.';\n                isValid = false;\n            }\n\n\n            /** You cannot start a file name with the period. */\n            if (fileName[0] === '.') {\n                userMessage = 'You cannot start a file name with the period.';\n                isValid = false;\n            }\n\n            /** Don't continue evaluating if a problem has already been found */\n            if (!isValid) {\n                userMessage += '  Please update the file on your system and upload again.';\n                toastr.error(userMessage);\n            }\n\n            return isValid;\n        }\n\n    }\n\n    export function APAttachmentsDirective($injector) {\n        $q = $injector.get('$q');\n        $sce = $injector.get('$sce');\n        $timeout = $injector.get('$timeout');\n        apDataService = $injector.get('apDataService');\n        toastr = $injector.get('toastr');\n\n        return {\n            scope: {\n                listItem: \"=\",      //List item the attachments belong to\n                changeEvent: '='    //Optional - called after an attachment is deleted\n            },\n            controller: APAttachmentsController,\n            controllerAs: 'vm',\n            templateUrl: 'src/apAttachments.html'\n        }\n    }\n\n    /**\n     * @ngdoc directive\n     * @name angularPoint.directive:apAttachments\n     * @element span\n     * @function\n     *\n     * @description\n     * Uses an iFrame to hijack the portions of the upload attachment form that we would like to show to the user. Adds\n     * event listeners on the form and waits for an upload to complete, then queries for the updated list of attachments\n     * to display below the form, and resets the iFrame.  The listed attachments are linked to allow opening and also\n     * provide delete functionality to disassociate with the list item.\n     *\n     *\n     * @param {object} listItem The list item that we'd like to view/add attachments.\n     * @param {function} [changeEvent] Callback when the attachments have been updated.\n     *\n     * @example\n     * <pre>\n     *     <span data-ap-attachments\n     *      data-list-item=\"verification\"\n     *      data-change-event=\"fetchAttachments\"></span>\n     * </pre>\n     */\n    angular.module('angularPoint')\n        .directive('apAttachments', APAttachmentsDirective);\n\n}\n"],"sourceRoot":"/source/"}